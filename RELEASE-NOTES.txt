==============
RELEASE NOTES:
==============


"version": "1.4.0" - Maintenance upgrade
----------------------------------------

  DONE: Removed bluebird as core Promise engine.

          *  Acording to its own documentation it has no noticeable performance
            benefit in current node versions.

  DONE: Dependencies upgrade and minor fixes.

          * Upgraded all dependencies (npm upgrade).

          * Fixed a few minor issues like manual path joins.

          * npm audit fix

   DONE: Migration from (legacy) Jade to Pug template engine.
  
          * Replaced Jade ("old" pug) by Pug.
  
          * Renamed and reviewed all internal (default) templates.
  
          * Added small hack to avoid pug errors in inline form templates when
            specified using (multiline) string templates:
            - Pug is more strict with indentation so, if you don't want to break
              your code one you will need to add extra space at the left that
              will make pug complain.
            - That extra space is now "intelligently" removed so you only need
              to arrange all indentation in reference to the first row.

  DONE: Updated this file and CHANGELOG.


"version": "1.3.7" - AuthHandler bug fix.
-----------------------------------------

  DONE: 1.3.7 Release - Fixed AuthHanler broken reference bug.

"version": "1.3.4" - Vulnerability fix.
---------------------------------------

  DONE: Express upgrade due to vulnerability fixes.


"version": "1.3.3" - Cleanup
----------------------------

  DONE: Removed forgiven testing code in template.


"version": "1.3.3" - More consistent form submission
----------------------------------------------------

  DONE: More consistent form submission in form facility.
   
        Fixed and improved form facility submission.
   
        Unified and improved/behaviour-fixed submit and download handlers using
        actual DOM form element ensuring behaviour, as much as possible, close
        to real form submission.
   
        NOTE: enctype is still automatically selected. In future versions it
        will be selectable providding contextual information about middleware
        requirements.


"version": "1.3.2" - Better table detection in auto-template.
-------------------------------------------------------------

  DONE: Improved html output filter table-like array detection.

       Now is not required that all rows have the same keys: It is enouth that
       no rows has any key not which not appears in first row.
  
       Even far from perfect, but avoid most of cases where missing values
       prevent table view.


"version": "1.3.1" - PATCH method and minor changes.
----------------------------------------------------

  DONE Improved form facility template.

  DONE: "Officially" support PATCH requests.

       (Simply included them valid methods configuration array)


  DONE: Naming improve (srvMethod).
    
        Renamed 'method' vars as 'srvMethod' to avoid confussion between service
        (metdod) keys, which can also be wilcards (or "meta-methods") such as
        "all" (-> express "all" route) and actual request methods.
    
        That is: srvMethod = all defines service for all methods but, for given
        http request, actual method is 'get', 'post' etc...

  DONE:  Fixed lack of promisification in rtHandler indexer.


"version": "1.3.0" - File uploads
---------------------------------

  DONE: Updated/Improved README and added functional demo.

  DONE: Improved form facility to allow file uploads.

        File uploads requires multipart POSTs so server needs express-fileupload
        (or compatible) middleware to be used.

        This is achieved by using FormData object in the Ajax form submission
        but, to avoid to always require multipart support server side, the
        presence of (actually filled) file inputs is detected at submission time
        and FormData is used ONLY if it is strictly requierd.


  DONE: Updated default RequestMapper to support file uploads thought
        express-fileupload

"version": "1.2.14" - Log rejections to stderr.
-----------------------------------------------

    * Enabled by default.
    * Can be disabled by setting *logErrors* option to false.

  Others: Fixed wrong version number of previous version in CHANGELOG.txt

"version": "1.2.12" - UX improvements and bug fixes.
----------------------------------------------------

  BUGFIX: Fixed Array output messing from v.1.2.9

  DONE: Increased threshold for table representation of Arrays in html output
        filter.

  DONE: Zebra style for tables in html output filter.

  DONE: Prevent nulls disabling table view in html output filter.


"version": "1.2.9" - Minor fixes
--------------------------------

  DONE: Minor fix in autogenerated help data.


"version": "1.2.8" - Minor fixes
--------------------------------

  DONE: Protection against possible output filters input messing.


"version": "1.2.7" - Improved html output filter.
-------------------------------------------------

  DONE: Now it's fully Jade-engine based thought default adaptative template.
        Without headers on Ajax requests.

  DONE: Improved defaul output filter request handler to pass xhr from original
        request.


"version": "1.2.6" - Allow to switch 'multiple' in form select's
----------------------------------------------------------------

  DONE: Shift+Ctrl-Click to enable/disable multiple selection in form facility
        combo boxes.


"version": "1.2.5" - Download capability and minor fixes
--------------------------------------------------------

  DONE: Download capability in form facility for all available output filters.

  DONE: Fixed reset button stop working after first form submit in form facility.

  DONE: Allow to provide file path instead of actual Jade template source in
        html output filter. Allowing, hence, to use includes and more...


"version": "1.2.3" - Bluebird promise engine, better form facility experience and more...
-----------------------------------------------------------------------------------------

  DONE: Modifyed request mapper to get url parameters "as is":
    - i.e.: "/foo/:section/bar/:id" will generate ':section' and ':id' vectors in service handler input.

  DONE: Fixed facilities breaking when using url parameters by using serviceName instead of actual path. So:
    - «"foo/:bar": {_get:...}» will be broken anyway.
    - «"foo": {path:"foo/:bar",_get:...}»:
      º Service facilities will be attached to foo/facility_name (BUT OVERRIDDEN in this case).
      º Root facility will be attached normally to /facility_name.
      º foo/facility_name overridding could be avoided thought below parameters:
        · "noOverride<FacName>" (noOverrideHelp, noOverrideForm, etc...)
        · "noOverrideAllFacilities" to avoid overridding any facility.

  DONE: Changed all "noOverrideXXX" with equivalent "allowOverrideXXX", reversing logic and defaulting to true.
    - This will be more consistent with future "allow(Filters)Override..." preferences.

  DONE: Implemented simetric "allowXXXFilterOverride" and "allowAllFiltersOverride" preferences for the same purpose.
    - All defaults to false meaning that available filters are not overridable by routes.

  DONE: Accept array as path parameter to deploy same service over multiple urls.
    - Example: ["/foo/bar", "/foo/bar/:id]

  NOTE: Form facility now uses first defined path of any service by default. I think that allowing to select from each has no point except if interpolating fields to fill url parameters. Which is too much complicated compared in simply send colon-prefixed parameters in normal request which will have the same effect at least when using current default requestMapper.

  DONE: Moved to bluebird as core promise engine.


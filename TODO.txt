TO-DO list:
===========

  (DONE) Modify request mapper to get url parameters "as is":
    - i.e.: "/foo/:section/bar/:id" will generate ':section' and ':id' vectors in service handler input.

  (DONE) Fix facilities breaking when using url parameters by using serviceName instead of actual path. So:
    - «"foo/:bar": {_get:...}» will be broken anyway.
    - «"foo": {path:"foo/:bar",_get:...}»:
      º Service facilities will be attached to foo/facility_name (BUT OVERRIDDEN in this case).
      º Root facility will be attached normally to /facility_name.
      º foo/facility_name overridding could be avoided thought below parameters:
        · "noOverride<FacName>" (noOverrideHelp, noOverrideForm, etc...)
        · "noOverrideAllFacilities" to avoid overridding any facility.

  (DONE) Change all "noOverrideXXX" with equivalent "allowOverrideXXX", reversing logic and defaulting to true.
    - This will be more consistent with future "allow(Filters)Override..." preferences.

  * Implemented simetric "allowXXXFilterOverride" and "allowAllFiltersOverride" preferences for the same purpose.
    - All defaults to false meaning that available filters are not overridable by routes.

  (DONE) Accept array as path parameter to deploy same service over multiple urls.
    - Example: ["/foo/bar", "/foo/bar/:id]

  * Move to bluebird as default promise engine.

